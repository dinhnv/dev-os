# unbind default prefix
unbind C-b
set -g prefix C-s
bind C-s send-prefix

# true colors
set-option -ga terminal-overrides ",xterm-256color:Tc"

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reload!"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind j resize-pane -D 10
bind k resize-pane -U 10
bind l resize-pane -L 10
bind h resize-pane -R 10

bind C-p previous-window
bind C-n next-window

unbind %
bind / split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# use <prefix> q<number> to show pane number
set -g base-index 1
set-window-option -g pane-base-index 1
set -g history-limit 10000

set -sg escape-time 0
setw -g aggressive-resize on

# renumber windows sequentially after closing any of them
set -g renumber-windows on

set -g status-bg black
set -g status-fg white
set-window-option -g window-status-current-fg green
set -g status-right '#[fg=white]P.#P | %a %Y-%m-%d %H:%M'

# message style
set -g display-time 2000
setw -g message-fg white
setw -g message-bg red

# enable mouse support for switching panes/windows
setw -g mouse on

# like vi
setw -g mode-keys vi
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
